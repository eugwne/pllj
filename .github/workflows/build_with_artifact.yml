
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        PGVERSION: [9.6, 10, 11, 12, 13]
    # The type of runner that the job will run on
    runs-on: ubuntu-16.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        env:
          PGVERSION: ${{ matrix.PGVERSION }}
        run: echo PG version ${PGVERSION}
        
        
      - name: install uthash dev
        run: sudo apt-get -y install uthash-dev
          
      - name: install luajit
        run: |
          wget -qO- https://github.com/openresty/luajit2/archive/v2.1-20190530.tar.gz | tar xvz
          cd ./luajit2-2.1-20190530
          make && sudo make install
          cd ../

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        env:
          PGVERSION: ${{ matrix.PGVERSION }}
        run: |
          sudo apt-get -y --purge remove postgresql libpq-dev libpq5 postgresql-client-common postgresql-common
          sudo rm -rf /var/lib/postgresql
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo sh -c "echo deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main ${PGVERSION} >> /etc/apt/sources.list.d/postgresql.list"
          sudo apt-get update -qq
          sudo apt-get -y -o Dpkg::Options::=--force-confdef -o Dpkg::Options::="--force-confnew" install postgresql-${PGVERSION} postgresql-server-dev-${PGVERSION} postgresql-contrib-${PGVERSION}
          sudo chmod 777 /etc/postgresql/${PGVERSION}/main/pg_hba.conf
          sudo echo "local   all         postgres                          trust" > /etc/postgresql/${PGVERSION}/main/pg_hba.conf
          sudo echo "local   all         all                               trust" >> /etc/postgresql/${PGVERSION}/main/pg_hba.conf
          sudo echo "host    all         all         127.0.0.1/32          trust" >> /etc/postgresql/${PGVERSION}/main/pg_hba.conf
          sudo echo "host    all         all         ::1/128               trust" >> /etc/postgresql/${PGVERSION}/main/pg_hba.conf
          sudo /etc/init.d/postgresql restart
          createuser -U postgres -s runner
          psql -U postgres -A -t -c "show server_version;"
          export PG_VERSION_STR=$(psql -U postgres -A -t -c "show server_version_num;")
          echo ${PG_VERSION_STR}
          sudo apt-get install gcc-5
          sudo apt-get install g++-5
          sudo apt-get install gcc-5-plugin-dev
          sudo unlink /usr/bin/gcc && sudo ln -s /usr/bin/gcc-5 /usr/bin/gcc
          gcc --version
          git clone https://github.com/eugwne/gcc-lua.git
          cd gcc-lua
          make && sudo make install
          cd ../
          git clone https://github.com/eugwne/gcc-lua-cdecl.git
          cd gcc-lua-cdecl
          sudo make install
          cd ../
          cd gen
          gcc -S gen.c -fplugin=/usr/lib/gcc/x86_64-linux-gnu/5/plugin/gcclua.so -fplugin-arg-gcclua-script=generate.lua -I /usr/include/postgresql/${PGVERSION}/server > ../src/pllj/pg/api_${PG_VERSION_STR}.lua
          echo "return require('pllj.pg.api_${PG_VERSION_STR}')" > ../src/pllj/pg/api_${PGVERSION}.lua
          cd ../
          make && sudo make install && sudo make install-module && make installcheck
          cat regression.diffs || true
          make clean
          PLLJ_UNTRUSTED=1 make
          sudo PLLJ_UNTRUSTED=1 make install 
          sudo make install-module 
          make installcheck
          cat regression.diffs || true
          
      - name: The job has failed
        if: ${{ failure() }}
        run: cat regression.diffs
          
      - uses: actions/upload-artifact@v2
        with:
          name: pllj-artifact
          path: |
            ./expected
            ./sql
            ./src
            ./LICENSE
            ./Makefile
            ./pllj--0.1.sql
            ./pllj.c
            ./pllj.control
            ./pllju--0.1.sql
            ./pllju.control
